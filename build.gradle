buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:+'
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
    distributionType = Wrapper.DistributionType.ALL
}

group = 'com.github.wtekiela'
version = '0.2.2-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'license'
apply plugin: 'maven'

sourceCompatibility = 1.8

license {
    header rootProject.file('LICENSE')
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'Wojciech Tekiela'

    include "**/*.java"
    exclude "**/*Test.java"
}

repositories {
    mavenCentral()
}

archivesBaseName = 'opensub4j'

sourceSets {
    integTest {
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

configurations {
    integTestCompile.extendsFrom testCompile
    integTestImplementation.extendsFrom testImplementation
    integTestRuntime.extendsFrom testRuntime
}

dependencies {

    compile 'org.slf4j:slf4j-api:1.7.+'
    compile 'org.apache.xmlrpc:xmlrpc-client:3.1.+'

    testCompile 'org.testng:testng:6.9.+'

    testRuntime 'org.slf4j:slf4j-simple:1.7.+'

}

test {
    useTestNG()

    beforeTest { descriptor ->
        logger.lifecycle("Running unit test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle(event.message)
    }
}

task integTest(type: Test, dependsOn: jar) {
    group 'verification'
    description 'Runs integration tests.'
    testClassesDirs = sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath
    systemProperties['jar.path'] = jar.archivePath

    useTestNG()

    beforeTest { descriptor ->
        logger.lifecycle("Running integration test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle(event.message)
    }
}

check.dependsOn integTest

jar {
    manifest {
        attributes(
                "Specification-Title": "OpenSubtitles API for Java",
                "Specification-Version": version,
                "Specification-Vendor": "Wojciech Tekiela",
                "Implementation-Title": "OpenSub4J",
                "Implementation-Version": version,
                "Implementation-Vendor": "Wojciech Tekiela"
        )
    }
}

task javadocJar(type: Jar) {
    group 'build'
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    group 'build'
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}



uploadArchives {
    repositories {
        mavenLocal()
    }
}